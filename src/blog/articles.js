
          /* eslint-disable */
          export const codeArticles = [{"import":"/src/blog/code/2017-02-21-back-to-the-basics.svelte","url":"/code/2017-02-21-back-to-the-basics","bg":"/images/bg_11.jpg","category":"code","title":"Back To The Basics","slug":"2017-02-21-back-to-the-basics","date":"2017-02-21","month":1,"day":20,"year":2017,"preview":"\tTLDR: Frameworks make you lazy. Learn the Basics.\tIt's 2017 and I've realized that I've spent too much time letting a framework do most of the ðŸ’ª\theavy lifting for me. To...","strippedContent":"\tTLDR: Frameworks make you lazy. Learn the Basics.\tIt's 2017 and I've realized that I've spent too much time letting a framework do most of the ðŸ’ª\theavy lifting for me. To be fair, that's what a lot of us have done. Who can argue that using a\tlibrary or framework to help you get the job done isn't a smart move. The problem I've learned is\tthat if you spend too much time using a framework, things start to become &quot;magical&quot;.\tI realized this recently when I needed to write a simple popover component. The problem was that I\tneeded to add an event where the popover would hide if you clicked outside the element. My first\tthought was to see if React had a special blur function that could solve this for me, and of\tcourse adding an onBlur event did not solve the issue. I then proceeded to see what others were\tdoing, and it was all DIY or just use some popover component that already works. Of course I opted\tto use the component already written (for time sake), but I felt silly not knowing how to approach\tthis.\tTurns out I just needed to learn some of the basics of JS again. With plain vanillaJS, I could\thave easily added an event listener to the body element and checked the target against the div. A\tsimple callback is all I would need and I could make all this happen. Why didn't I think of this\tin the first place? It was because I was expecting to have the framework solve it for me - when in\tfact I needed to do it myself.\tMy new goal lately has been to avoid using JQuery so I can improve my skills in the most primitive\tway.If I know how things work on the lowest level, then I can better solve for complex components. I\tknow this is a simple example, but it proves that once in a while you need to revisit the basics.\tI've actually rewritten all the JS on this site so I could remove the dependency on JQuery. It was\tactually a fun exercise, and as a benefit my site is much smaller in size.Here's the codepen for fun: (click square, and click off the square)\tSee the PenEvent Listeners and some React\tby Michael Munsie (@mikemunsie) on\tCodePen.\tOh, and it's 2017! I haven't updated this site in almost 2 years :( So I made this whole process\tmuch easier to manage. I even made a github now so I can encourage myself to make some progress https://github.com/mikemunsie/munstrocity.com..."},{"import":"/src/blog/code/2015-09-23-the-jackson-pollock.svelte","url":"/code/2015-09-23-the-jackson-pollock","bg":"/images/bg_3.jpg","category":"code","title":"The Jackson Pollock","slug":"2015-09-23-the-jackson-pollock","date":"2015-09-23","month":8,"day":22,"year":2015,"preview":"\tThis is actually quite a funny story. I was working more on my sprite engine tonight and was\tadding in the ability for circle sprites. Once I got that in, I...","strippedContent":"\tThis is actually quite a funny story. I was working more on my sprite engine tonight and was\tadding in the ability for circle sprites. Once I got that in, I started playing around to make\tsure everything was working. So I made some circles appear and disappear, dynamically changed\tsizes, did the whole color pulse thing, and then completely geeked out to my wife to show her all\tthe cool little effects I can do.\tAs we joked around about all the animations I could make, I then thought it would be fun to show a\ttrail of the circle as it went around the canvas. So I did that and it looked pretty cool. A few\tmore experiments later, my ADD brain realized, &quot;Hey, this looks like modern art... wait a minute,\tI want to try something!&quot; - so then I googled Jackson Pollock and figured what the hell - why not\ttry and create something similar\tSo a few iterations later, I get something that looked kinda &quot;meh&quot; â€“ like a blur of colors. I\tstarted adjusting colors and then while doing so I made a typo... this unexpected typo gave my\timage the modern effect it needed! I kept iterating and then ended up with the result you see\there.\tLesson learned:Â Mistakes are your friend :)..."},{"import":"/src/blog/code/2015-09-21-break-n-glue-featured-on-codepen.svelte","url":"/code/2015-09-21-break-n-glue-featured-on-codepen","bg":"/images/bg_9.jpg","category":"code","title":"Break N Glue Featured On Codepen","slug":"2015-09-21-break-n-glue-featured-on-codepen","date":"2015-09-21","month":8,"day":20,"year":2015,"preview":"\tI spent a few hours hacking away on my own JS sprite engine yesterday and came up with a cool\teffect. I've been fascinated by the &quot;swirly orb&quot; effect for years...","strippedContent":"\tI spent a few hours hacking away on my own JS sprite engine yesterday and came up with a cool\teffect. I've been fascinated by the &quot;swirly orb&quot; effect for years now, and even have stuff dating\tback to old portfolios in 2008 and even my old MySpace (which doesn't exist). I recreated the\teffect using HTML5 canvas with some help from a new routines I created in the engine. I basically\tcreated a bunch of pixels that orbit around each other and then can separate and glue itself back\ttogether.Here's the result:\tWhen I went to show a few friends at work this morning my creation, I noticed my snippet was on\tthe front page. That was cool... wait what?! Front page of Codepen?!! I had to take a double look,\tthen a triple look, then logout of my CodePen and go into incognito mode... sure enough I had made\tit to the front page! So cool! I was just having fun on a Sunday afternoon hacking away at\tlearning and working on my sprite engine when this happened.\tSo there you have it. A work in progress and a display of some cool orbs that can come right back\tto where they started. Bookmarking this moment in time because today unexpectedly rocked :D..."},{"import":"/src/blog/code/2015-04-06-structuring-gulpjs-files.svelte","url":"/code/2015-04-06-structuring-gulpjs-files","bg":"/images/bg_6.jpg","category":"code","title":"Structuring Gulpjs Files","slug":"2015-04-06-structuring-gulpjs-files","date":"2015-04-06","month":3,"day":5,"year":2015,"preview":"\tSo it's been about 10 months in since my transition from\tGrunt to\tGulpJS. Even crazier to think I haven't played around with front\tend build tools until a little over a year...","strippedContent":"\tSo it's been about 10 months in since my transition from\tGrunt to\tGulpJS. Even crazier to think I haven't played around with front\tend build tools until a little over a year ago. I still remember the days where I would have\tcoffeescript running in one tab, sass in another, and then have in one final tab a way to compress\tand uglify the scripts. It was all pretty much one big science experiment.\tWhether it's for local development, starting a server, generating static content, compressing\tassets, or adding in a task to minify and compress assets for prod-ready code, I use gulp in just\tabout everything.\tNowadays I use a combination of splitting my tasks into gulp files (http://macr.ae/article/splitting-gulpfile-multiple-files.html) and using functions instead of gulp.task for each process so I can better separate the tasks I\twant to run through gulp and how I use the libraries. It's much easier to see a few gulp.tasks\tinstead of one for every single process you will have in your app. Plus, since I have everything\tsetup as a promise, I can know exactly when something finishes to execute the next task. No more\thaving to worry about race conditions :)\tCheck out an example snippet (this has not been split into multiple files, but you get the idea):\thttps://gist.github.com/mikemunsie/f5c69e49745a00658e6c\t..."},{"import":"/src/blog/code/2015-04-02-self-typing-css-sorcery.svelte","url":"/code/2015-04-02-self-typing-css-sorcery","bg":"/images/bg_10.jpg","category":"code","title":"Self Typing Css Sorcery","slug":"2015-04-02-self-typing-css-sorcery","date":"2015-04-02","month":3,"day":1,"year":2015,"preview":"\tSo this was pretty fun. I was shown this watch-me-build-this effect Codepen @ http://codepen.io/jakealbaugh/full/PwLXXP/ and I was blown away. I thought it was really cool, so I decided to dissect...","strippedContent":"\tSo this was pretty fun. I was shown this watch-me-build-this effect Codepen @ http://codepen.io/jakealbaugh/full/PwLXXP/ and I was blown away. I thought it was really cool, so I decided to dissect the code and recreate\tit myself.\tIt turns out the idea is not complicated at all. Basically you have a string that is the final\toutput of the CSS, and then you slowly add the CSS string into a style element. Add a little\tinterval to keep adding to the string and inject into the style element and you can simulate\ttyping (there's no backspaces, so it's the most realistic simulator lol).\tLove to experiment new things that I find interesting. Thanks Kris Giamello for showing me this!\tHere's the link if you are on mobile: http://codepen.io/mikemunsie/pen/mygGQZ/..."},{"import":"/src/blog/code/2014-01-30-trend-development.svelte","url":"/code/2014-01-30-trend-development","bg":"/images/bg_8.jpg","category":"code","title":"Trend Development","slug":"2014-01-30-trend-development","date":"2014-01-30","month":0,"day":29,"year":2014,"preview":"\tOne of the things I try to do every now and then is learn what's currently trending. These days\tthere are lot of really cool concepts from parallax enabled sites, tile...","strippedContent":"\tOne of the things I try to do every now and then is learn what's currently trending. These days\tthere are lot of really cool concepts from parallax enabled sites, tile design, objects scrolling\tinto view, and of course 100% responsive websites.Design trends are going to constantly change and I firmly believe the best way to stay current is\tto learn how the trends are created and try to apply them. Tonight I wanted to start off with\tsomething small. I headed on over to thebestdesigns.com and picked a site I wanted to replicate\t(or at least get close). With that I created a small one page example that contains a full size\tbackground, full size google maps with overlay, links that highlight as you scroll, and some\ttransitions that I thought were pretty neat (I love the blur effects, and I'm sure in the next\tpost or so you might see some examples).\tOver time I plan on having a large library of designs and concepts that I have created that I can\tpick and pull from. This is more for a learning practice than anything - plus some of these trends\tare just plain fun to develop.That's all for tonight. It's 1:21 AM and I need some sleep.Enjoy the big text :P..."},{"import":"/src/blog/code/2013-09-02-mulitplayer-js-tanks.svelte","url":"/code/2013-09-02-mulitplayer-js-tanks","bg":"/images/bg_7.jpg","category":"code","title":"Mulitplayer Js Tanks","slug":"2013-09-02-mulitplayer-js-tanks","date":"2013-09-02","month":8,"day":1,"year":2013,"preview":"\tHere's the game in action @ http://www.screencast.com/t/0kwMPvrUyMSz\tToday I decided to learn a little about NodeJS... well about 6 hours later I conquered one of my\tchildhood goals: to create a multiplayer...","strippedContent":"\tHere's the game in action @ http://www.screencast.com/t/0kwMPvrUyMSz\tToday I decided to learn a little about NodeJS... well about 6 hours later I conquered one of my\tchildhood goals: to create a multiplayer JS game! Granted it's not much of a game and really only\tserves as a small example of what's to come, but I'm pretty ecstatic that it works as well as it\tdoes. My goals for today were relatively simple: To learn about NodeJS, create a basic api call,\tand to possibly create a small website. Well that escalated quickly and I went down a path of\tlearning about Web Sockets and my mind just completely had a field trip.\tFor the browser side of things, I'm using socket.io. It really\tdoes make it super easy to send and receive messages. Here's an example:\tBasically I went through a whole lot of tutorials that were planted all over reddit.com/r/nodejs. It's pretty neat to have a backend language that can work asynchronously and have a syntax\tthat's as flexible as JavaScript. I'm really liking NodeJS so far and surprised that I didn't dive\tinto it more previously. Dare I say I'll be moving into NodeJS from PHP? It's a very possible\toption ;)..."},{"import":"/src/blog/code/2013-08-11-observing-dom-changes.svelte","url":"/code/2013-08-11-observing-dom-changes","bg":"/images/bg_4.jpg","category":"code","title":"Observing Dom Changes","slug":"2013-08-11-observing-dom-changes","date":"2013-08-11","month":7,"day":10,"year":2013,"preview":"\tSo I finally got to playing around with the Mutation Observer today and am ultra excited for the\tfuture of JavaScript! I'm also glad that this works on IE9+, but unfortunately...","strippedContent":"\tSo I finally got to playing around with the Mutation Observer today and am ultra excited for the\tfuture of JavaScript! I'm also glad that this works on IE9+, but unfortunately won't be able to\tuse this anytime soon until IE9 becomes the new IE8.\tThat aside, I've been working on a little personal project that utilizes custom elements (just\tlike AngularJS) but with the ability to add custom elements into the DOM and automatically update\tto the appropriate snippet. So by adding in &lt;custom element=&quot;header&quot;&gt;&lt;/custom&gt; gets\treplaced with &lt;div class=&quot;header&quot;&gt;...&lt;/div&gt; through an insert. That means Inspect\tElement - add element - mutation observer callback gets fired and bam - the new element is on the\tpage.This is something I've heard about for a while and could not wait to get my hands onto.\tCheck out the video!..."},{"import":"/src/blog/code/2013-05-02-computed-observables-that-compute-computed-observables.svelte","url":"/code/2013-05-02-computed-observables-that-compute-computed-observables","bg":"/images/bg_1.jpg","category":"code","title":"Computed Observables That Compute Computed Observables","slug":"2013-05-02-computed-observables-that-compute-computed-observables","date":"2013-05-02","month":4,"day":1,"year":2013,"preview":"\tYes, you have read that correctly. In one of my more recent projects I had to use a computed\tobservable to get an object that I needed, but from that object...","strippedContent":"\tYes, you have read that correctly. In one of my more recent projects I had to use a computed\tobservable to get an object that I needed, but from that object I also needed to display another\tobject based on values from the computed observable. I haven't ran into this issue before, but I'm\tpretty glad I ran into this recently.\tThis is actually a really cool technique I learned from trial and error. Basically in your\tcomputed observable check to make sure the computed observable you are wanting to check against\tactually returns a value. If it does, then use that value and get what you need. It requires one\tif statement in the logic of your observable, so it actually comes out quite nicely.\tI created a very simple example that shows exactly what I mean. Here you just simply change the\tvalue of the drop down and watch the values update. Those values are computed observables that get\tits value from another computed observable...."},{"import":"/src/blog/code/2013-04-29-thoughts-on-angularjs.svelte","url":"/code/2013-04-29-thoughts-on-angularjs","bg":"/images/bg_5.jpg","category":"code","title":"Thoughts On Angularjs","slug":"2013-04-29-thoughts-on-angularjs","date":"2013-04-29","month":3,"day":28,"year":2013,"preview":"\tI've been working a lot with KnockoutJS lately and was told about a framework that I could\tpossibly like even better. Even better? Now that's a pretty bold statement, so I...","strippedContent":"\tI've been working a lot with KnockoutJS lately and was told about a framework that I could\tpossibly like even better. Even better? Now that's a pretty bold statement, so I decided to check\tit out. I started off by taking a trip over to http://angularjs.org/ and seeing what it's all\tabout. It was comforting to see some examples and how simple everything looked.\tWhat instantly caught my attention was these little curly braces, &#123;&#123; expression }}, that\tyou could stick anywhere in your markup and Angular would pick up and parse. I'm used to seeing\tdata-bind=&quot;text:value&quot; in my markup and this was pretty slick. But of course it would take a bit\tmore than just a prettier syntax to grab my attention. The scoping in Angular is awesome. Being\table to apply a controller to an element through markup was pretty sweet and with Knockout I had\tfaced a few problems when it came to having multiple controllers on one element. The issue was if\tthere was a data-bind that didn't exist in the class, Knockout would have a panic attack. To\tresolve those issues I would have to use a custom binding to stop Knockout from applying it's\tdata-binds to that element. With AngularJS it becomes a breath of fresh air. I can have an element\tuse one controller, and then within that element have a child element use a different controller.\tWidgets are SO easy to create now.\tFun doesn't stop there though, the coolest feature of Angular by far is the use of directives.\tDirectives allow me to create a set of custom elements with events that can be used all throughout\tthe site. Pretty nifty to have an element called &lt;search&gt; and have all of it's functionality\tbuilt right in! Makes it super easy to create a set of reusable functional elements on the front\tend. No more having to copy and paste markup!\tBut with all the awesome features of Angular, I'm still only in the beginning stages. My\texperience with Knockout has helped me learn this framework, but there are still many things I\thave yet to learn. I've been keeping up with the tutorials @ http://egghead.io/ and they are\tincredibly helpful. The documentation for Angular is good, but I feel since I'm incredibly new to\ta lot of the terminology and features it's easier to have see it all in action.\tI've also completely rewritten my current site in AngularJS! Decided it would be a fun switch to\tlearn a new framework and see its advantages and disadvantages. Really right now the biggest\tdisadvantage is that I'm a bit slower writing the code because I'm still learning as I go. I\twouldn't suggest completely migrating to AngularJS until you have a full understanding so that\twhen making the switch you can easily migrate your code. I do like the fact that it really\tencourages testing which is what I want to start learning next. You can write the cleanest\tJavaScript code in the world, but when you start working with a team you want to make sure your\tcode still works and remains functional.\tAnyways I love it and it's been pretty fun to learn thus far. I will be continuing my expedition\tover the course of the next few weeks...."},{"import":"/src/blog/code/2013-04-15-mikemunsie-redesign.svelte","url":"/code/2013-04-15-mikemunsie-redesign","bg":"/images/bg_2.jpg","category":"code","title":"Mikemunsie Redesign","slug":"2013-04-15-mikemunsie-redesign","date":"2013-04-15","month":3,"day":14,"year":2013,"preview":"\tSo it's the year 2013 and we've been in the year for a few months now. That means that my site is\tnow out of date! Okay, it really isn't, but...","strippedContent":"\tSo it's the year 2013 and we've been in the year for a few months now. That means that my site is\tnow out of date! Okay, it really isn't, but I feel having all these squares on my site is looking\tkinda &quot;blocky&quot;. Been looking at a lot of great sites lately and I feel my site just isn't easy to\tread.\tSo with that I wanted a new design that's easier on the eyes, a bit more organized and encourages\tthe user to check out my other posts, and lastly give some consistency with the colors. As I learn\tmore about colors, fonts, gradients, usability, and so forth - I realize I could do a lot better.I present to you the new design (implementing soon)..."},{"import":"/src/blog/code/2012-11-15-date-helpers.svelte","url":"/code/2012-11-15-date-helpers","bg":"/images/bg_11.jpg","category":"code","title":"Date Helpers","slug":"2012-11-15-date-helpers","date":"2012-11-15","month":10,"day":14,"year":2012,"preview":"\tLately I've been writing a lot of functionality that involves using the JavaScript Date Object. In\tone of the more recent projects I needed to pass a start and end date...","strippedContent":"\tLately I've been writing a lot of functionality that involves using the JavaScript Date Object. In\tone of the more recent projects I needed to pass a start and end date to hand me back a set of\tschedules; however the start and date wasn't as simple as picking two dates and going from there -\tI had to figure out the week's start day (sunday at midnight) and the end day (saturday 11:59:59)\tfrom the week chosen. This meant if I picked November 17, 2012 then the start Date would be\tNovember 11 and the end date would be November 17.\tSo that got me thinking and I wrote a routine to make my life a bit simpler when coming to\tsituations like this, and it also might help in future projects where I need to get last tuesday's\tset of information. Check out how simple this is:Not too bad eh? I find it pretty nifty!\thttps://github.com/mikemunsie/Date-Helpers..."},{"import":"/src/blog/code/2012-11-14-simple-ajax-class.svelte","url":"/code/2012-11-14-simple-ajax-class","bg":"/images/bg_3.jpg","category":"code","title":"Simple Ajax Class","slug":"2012-11-14-simple-ajax-class","date":"2012-11-14","month":10,"day":13,"year":2012,"preview":"\tAs I continue to move into a world filled with Ajax Requests, I found out that although the built\tin Ajax routine for JQuery is pretty handy, I needed something more....","strippedContent":"\tAs I continue to move into a world filled with Ajax Requests, I found out that although the built\tin Ajax routine for JQuery is pretty handy, I needed something more. I didn't like seeing this in\tmy code:\tThis meant if I have a really long block of code inside of my fail routine, then I might have to\tduplicate the same code if the response is an Error. Granted, sometimes I might want to change the\tfunctionality, but for the most part you are going to either send a &quot;post&quot; or &quot;get&quot; with JSON data\tand expect a response back whether a success or fail and then write functionality based on that.\tSo I created a simple way to handle this madness. I called it SimpleAjax.\tNow I can standardize all my Ajax requests and one nice simple response that contains the status,\tresponseText, and XHR if you need to go further. I've also taken this class and went one step\tfurther with making a simple way to make multiple asynchronous Ajax requests and once all calls\tare complete run a custom callback. See:\tWhat's neat about this is that the response I get back is a JSON with all the requests I made and\ttheir response. Super easy to iterate through (seriously, response.three will get you the results\tyou pulled from &quot;google.com&quot;).\thttps://github.com/mikemunsie/Simple-Ajax..."},{"import":"/src/blog/code/2012-11-14-knockoutjs-mapping-revert-observables-utility.svelte","url":"/code/2012-11-14-knockoutjs-mapping-revert-observables-utility","bg":"/images/bg_9.jpg","category":"code","title":"Knockoutjs Mapping Revert Observables Utility","slug":"2012-11-14-knockoutjs-mapping-revert-observables-utility","date":"2012-11-14","month":10,"day":13,"year":2012,"preview":"\tWith KnockoutJS you have input fields that in most cases have the value binded to an observable.\tWhat this means is that when you change the value of the input field,...","strippedContent":"\tWith KnockoutJS you have input fields that in most cases have the value binded to an observable.\tWhat this means is that when you change the value of the input field, the variable that is binded\tto that textbox will be updated as well. This is extremely cool but has one disadvantage.\tLets say you are creating an admin section and have a list of users with the ability to change\ttheir first and last name. You change the user's first name and then decide to cancel. For most\tpeople you would create a backup observable called &quot;original-observableNameGoesHere&quot; and then\tupdate the value to the original value... but that just looks terrible.\tSo I decided there had to be an easier way and I went on to create a class that could handle\treverting observables back to their original state. I originally created this to work for arrays,\tbut now have it structured to work with an individual object as well. Super simple to implement.\tHere's an example:\thttps://github.com/mikemunsie/KnockoutMapping-Observable-Revert-Utilities..."},{"import":"/src/blog/code/2012-08-30-gettin-sassy-with-retina-images.svelte","url":"/code/2012-08-30-gettin-sassy-with-retina-images","bg":"/images/bg_6.jpg","category":"code","title":"Gettin Sassy With Retina Images","slug":"2012-08-30-gettin-sassy-with-retina-images","date":"2012-08-30","month":7,"day":29,"year":2012,"preview":"\tOne of my projects lately has been to develop a new responsive design for MyADT.com. The issue I\tran into was that I needed a simple way to detect retina display,...","strippedContent":"\tOne of my projects lately has been to develop a new responsive design for MyADT.com. The issue I\tran into was that I needed a simple way to detect retina display, show the retina image, and apply\tother backgrounds on top of the retina image. At first I tried searching to see if there was a\tmixin, but as it seemed there weren't any that met what I was looking for.\tSo instead of searching for too long, I decided to get creative and write my own mixin. Works like\ta charm and is pretty simple to use...."},{"import":"/src/blog/code/2012-08-09-bag-of-tricks-and-treats.svelte","url":"/code/2012-08-09-bag-of-tricks-and-treats","bg":"/images/bg_10.jpg","category":"code","title":"Bag Of Tricks And Treats","slug":"2012-08-09-bag-of-tricks-and-treats","date":"2012-08-09","month":7,"day":8,"year":2012,"preview":"\tI figured I would write a small little post sharing some of the goodies I've developed lately.\tFirst and foremost did you know this website gets its content from WordPress? Although...","strippedContent":"\tI figured I would write a small little post sharing some of the goodies I've developed lately.\tFirst and foremost did you know this website gets its content from WordPress? Although I created\tthis site using my FlexMVC framework, it actually pulls its content from WordPress. And yes, I\teven have a WordPress Admin section. What you don't see is where the WordPress admin is, and\tthat's the beauty of it. Don't believe me that this is a wordpress site? Why don't you try http://mikemunsie.com/?feed=rss2\tand you will see that I am using WordPress's RSS2 feed to allow different sites to pull the latest\tposts from my blog.\tSo what do you need to do to get this up and running? First of all, just simply install wordpress in\ta subdirectory, remove the index.php, and last but not least modify the .htaccess file to include:In order for LinkedIn to pull my latest posts from WordPress, it needed a feed. Because I removed\tthe WordPress site, I didn't have a feed, so in order to get it back I needed the functionality\tfrom WordPress. I did a little PHP to detect the query string and check if there is a feed=rss2 in\tthe url. If so, then go ahead and use the WordPress RSS2 feed. Here's the code:\tI really like a CSS spinner more than a gif or JavaScript animated spinner. So with a nice little\tclass of spin, I get the full chicken quesadilla. Here it is written in SASS...."},{"import":"/src/blog/code/2012-04-22-joining-the-improving-UX-team.svelte","url":"/code/2012-04-22-joining-the-improving-UX-team","bg":"/images/bg_8.jpg","category":"code","title":"Joining The Improving UX Team","slug":"2012-04-22-joining-the-improving-UX-team","date":"2012-04-22","month":3,"day":21,"year":2012,"preview":"Beginning May 2, 2012 I will be joining forces with Improving Enterprises as a UX Consultant\tworking with a team of developers and UX ninjas.\tI feel this move was necessary on...","strippedContent":"Beginning May 2, 2012 I will be joining forces with Improving Enterprises as a UX Consultant\tworking with a team of developers and UX ninjas.\tI feel this move was necessary on my part because as a developer I believe it's crucial to\tconstantly challenge yourself. A great quote to explain everything:&quot;Life begins at the end\tof your comfort zone&quot;. I feel that I'm ready to take on a challenge that will be unlike anything\tI've experience thus far. I will be diving deeper into the world of Responsive Design,\tSingle Page Applications, Keynote, and many other areas. More importantly I will be getting\ta head start into doing what I've always wanted to do.I can't wait :)..."},{"import":"/src/blog/code/2012-03-21-improving-the-munstrojs-engine.svelte","url":"/code/2012-03-21-improving-the-munstrojs-engine","bg":"/images/bg_7.jpg","category":"code","title":"Improving The Munstrojs Engine","slug":"2012-03-21-improving-the-munstrojs-engine","date":"2012-03-21","month":2,"day":20,"year":2012,"preview":"\tKeeping JavaScript structured and organized is a challenge. As part of my daily tasks as a web\tdeveloper, I am constantly utilizing different plugins such as Fancybox, Datatables, JQueryUI, and\tso much...","strippedContent":"\tKeeping JavaScript structured and organized is a challenge. As part of my daily tasks as a web\tdeveloper, I am constantly utilizing different plugins such as Fancybox, Datatables, JQueryUI, and\tso much more. In order to use a plugin you must import the JS and the CSS - so with that a few\tmonths ago I had this idea to import vendors with a simple line of code that included both the CSS\tand JS, but the only problem is that dynamically loading the CSS for the plugin can look choppy.\tSo what I started doing instead was I placed the Plugin CSS in my main stylesheet and just\tdynamically import the JavaScript. I would have something like:\tThe only problem is that in order to load &quot;jqueryui&quot; or &quot;fancybox&quot;, I would run a switch statement\tand then find the JS file from there:\tSo a few days ago I had a solution, and it just made too much sense. Instead of having this long\tswitch statement for each vendor, why don't I have just one line of code that simply says &quot;import\t[vendor_name] from [vendors_folder] and load in the [vendor_name].js&quot; - bam. No more switch\tstatements. If I wanted to load &quot;fancybox&quot; it would search for the folder &quot;vendors/js/fancybox&quot;\tand then find the file &quot;fancybox.js&quot; and load it in. Now I have incredibly easy access to my\tvendor scripts... now only if I can structure the CSS better life would be wine...."},{"import":"/src/blog/code/2012-03-15-development-environment-on-windows-using-sass.svelte","url":"/code/2012-03-15-development-environment-on-windows-using-sass","bg":"/images/bg_4.jpg","category":"code","title":"Development Environment On Windows Using Sass","slug":"2012-03-15-development-environment-on-windows-using-sass","date":"2012-03-15","month":2,"day":14,"year":2012,"preview":"\tI have scratched my head a for a little while trying to figure out the best method to use SASS\twhile managing multiple sites on my local server. The picture to...","strippedContent":"\tI have scratched my head a for a little while trying to figure out the best method to use SASS\twhile managing multiple sites on my local server. The picture to your right is a small example of\twhat my folders look like. In each one of those folders contains an instance of my framework. When\tyou use SASS, you basically say &quot;I have my stylesheets here and I want them to compress to this\tparticular folder&quot;. That's cool, but for someone like me who maintains many different sites,\thaving your stylesheets not in the same folder as the website can be a bit unorganized. I even\twent to the extent and downloaded Scout, which btw is not a bad solution, but just wasn't quick\tenough for me and I didn't like to have to switch between projects (plus for some reason the\twindows version is buggy). So I got really creative and had this idea. I started off by thinking\tto myself, what if I wrote a batch file that would open up the cmd, run ruby, and execute a\tcommand? Ha, no mike, Ruby has it's own exe and can run it's own code. So I got smart, and I\tlearned a line of code in ruby that basically says: exec('compass watch &quot;./config&quot;')\tYeah that's right. Just saved this file as a .rb, opened the baby up, and like magic it just\tstarts watching the directory based on the configuration file (sorry if that spurred any\tconfusion, I am also using Compass). To the right shows what the sass folder inside of the\tframework looks like. Once a change is noticed, it automatically compiles to the public folder\tinto the CSS department. I think that was a pretty clever find and all I have to do is just copy\tand paste this into my framework and dispurse amongst the army of websites.I absolutely love programming. The end...."},{"import":"/src/blog/code/2012-03-09-jamtube-goes-to-version-2-0.svelte","url":"/code/2012-03-09-jamtube-goes-to-version-2-0","bg":"/images/bg_1.jpg","category":"code","title":"Jamtube Goes To Version 2 0","slug":"2012-03-09-jamtube-goes-to-version-2-0","date":"2012-03-09","month":2,"day":8,"year":2012,"preview":"\tI've been in the mood of doing some cleaning up lately and decided that it was important to\tupgrade JamTube! The old version, for starters, was not complete and not on...","strippedContent":"\tI've been in the mood of doing some cleaning up lately and decided that it was important to\tupgrade JamTube! The old version, for starters, was not complete and not on my Framework. At the\ttime I built this on another framework, but now since I have my own - why not use my own?! So I\tdid and with the power of Zurb Foundation (http://foundation.zurb.com/) and my sexy design skills\t(of course, I'm batman), I created this new version!\tIt's comes jam packed with techno music, so feel free to create a player sometime! It was built\tfor fun and mainly a way for me to listen to music while I work on stuff. Plus, it looks cool.Here's a pic of the development phase:\tUpdate: See it in action @ http://munstrocity.com:9001..."},{"import":"/src/blog/code/2012-02-24-lets-get-sassy.svelte","url":"/code/2012-02-24-lets-get-sassy","bg":"/images/bg_5.jpg","category":"code","title":"Lets Get Sassy","slug":"2012-02-24-lets-get-sassy","date":"2012-02-24","month":1,"day":23,"year":2012,"preview":"\tThanks to a conversation with Jason Cypret (http://jasoncypret.com/), I have stumbled upon SASS. For those who don't know what that is, don't feel bad - I didn't\tunderstand know what it...","strippedContent":"\tThanks to a conversation with Jason Cypret (http://jasoncypret.com/), I have stumbled upon SASS. For those who don't know what that is, don't feel bad - I didn't\tunderstand know what it was either. Well it's syntactically awesome stylesheets, and quite frankly\tthat's the best description for it. What's cool is that using SASS you can place variables inside\tof your stylesheet and use conditional statements. Allow me to demonstrate a piece of the\tawesomeness:\tAnd that's all you need to know to understand why it's so awesome! Now lets get to the links: http://sass-lang.com/\thttp://compass-style.org/..."},{"import":"/src/blog/code/2012-01-27-display-or-hide-loading-icon-for-ajax-requests.svelte","url":"/code/2012-01-27-display-or-hide-loading-icon-for-ajax-requests","bg":"/images/bg_2.jpg","category":"code","title":"Display Or Hide Loading Icon For Ajax Requests","slug":"2012-01-27-display-or-hide-loading-icon-for-ajax-requests","date":"2012-01-27","month":0,"day":26,"year":2012,"preview":"\tFunny enough I have been doing this the hard way! Everytime I would go into an Ajax request I\twould basically sayWhy didn't I just latch on to the AjaxStart and...","strippedContent":"\tFunny enough I have been doing this the hard way! Everytime I would go into an Ajax request I\twould basically sayWhy didn't I just latch on to the AjaxStart and AjaxStop methods as shown here?\thttp://nolovelust.com/post/Display-and-Hide-Ajax-loading-icon-on-every-ajax-request-with-jQuery.aspxSometimes you overcomplicate the simplest things :)..."},{"import":"/src/blog/code/2012-01-11-complicated-gloves.svelte","url":"/code/2012-01-11-complicated-gloves","bg":"/images/bg_11.jpg","category":"code","title":"Complicated Gloves","slug":"2012-01-11-complicated-gloves","date":"2012-01-11","month":0,"day":10,"year":2012,"preview":"\tA friend of mine, showed me an article the other day about how some developers fall into the trap\tof wearing the &quot;Complicated Gloves&quot; (see: http://thedailywtf.com/Articles/The_Complicator_0x27_s_Gloves.aspx). I would like to say...","strippedContent":"\tA friend of mine, showed me an article the other day about how some developers fall into the trap\tof wearing the &quot;Complicated Gloves&quot; (see: http://thedailywtf.com/Articles/The_Complicator_0x27_s_Gloves.aspx). I would like to say that even though my philosophy is to constantly try and find better and\tsimpler ways of doing things, I find myself at many times writing things the more complicated way.\tTake for example the reason why I use my own framework. It started off as a small project of last\tDecember (no i'm not talking about a month ago) to learn more about programming in general. I was\ta noob. I admittedly did not know much about frameworks, JQuery, MVC, and structure in general -\tso I dove deep into a framework developed from a co-worker (see: https://github.com/tinypress) at my first web dev job at MedFactory. I wanted to discover how everything worked because I was\tfascinated by the simplicity and structure that just seemed to work so &quot;magical&quot;.\tAt the time I knew a little bit about classes, so with my limited knowledge I took about a week\tdiving into the framework and started climbing up the classes to see exactly what was going on.\tWhat was so fascinating was that &quot;$this&quot; could be anything from Models to Libraries to pretty much\tanything you defined it to be, but where did it get it's classes from and how was it constructed?\tWell after staring and picking my brain for so long it all just clicked at once. I had never\tlearned about the process of overloading before and boy did it take me by surprise. I quickly saw\thow &quot;$this->Users->test()&quot; worked so magically, and I was immediately hooked on learning more.\tSo as I started learning how everything came together, I wanted to experiment on my own (after all\tI realized I learn best by getting my hands dirty). That project eventually went on to become\t&quot;openM&quot; - my first PHP MVC framework. It contained all the basics from Controllers, Models, Views,\tElements, Layouts, and Libraries. Here's what the code looked like:\tGranted that was some simple code. It was direct, to the point, and just worked... but as I\tcontinued to learn more, I realized that each time I wanted to use my &quot;Users&quot; Model, it had to be\tconstructed... which ultimately was not good for a little class I like to call &quot;Database&quot;. My\tDatabase class had to be instantiated every time in order for me to use it. So one could only\timagine, but for a single page I would have something like this:\tFirst of all, that's not hard to read, but the database class is going to have to be constructed 4\ttimes! Yes, 4 times just for four calls! I shouldn't be complaining too much because honestly\tthat's not bad with only four calls, but what about 20? Or how about more than that? Anyways, I\tthought of scalability and I didn't like the fact I had so many instances of the database class\tfloating around. This had to be fixed.\tSo that brings me to the next framework I developed, munsieMVC. This framework was based on the\tidea of using static variables to basically keep hold of the classes and only have them\tinstantiated once. So now my calls would look like this:\tThis was much better! Now in my framework I could setup static variables each time I wanted a\tclass to only be constructed once. It was a clever method because I used a static variable to hold\tan object (this meant I only had one instance in the memory instead of holding multiple\tinstances). This worked great and solved many of the issues the previous framework was having.\tBut there was still a problem, now that we had everything as static, isn't there a simpler way to\tcall the classes instead of having to define all these static variables in your main core class? I\tdidn't like the fact I had &quot;static $Models&quot;, &quot;static $Libs&quot;, etc. That meant each time I want to\tadd something to my framework, I need to create a static variable.\tSo after a year later I came up with a solution. My third framework, flexMVC does just that. I\thave read many articles on how we shouldn't go back to non OO classes, but there is definitely a\ttime and a place where it comes handy - and MVC is just that. Here is what the new code looks\tlike:\tNow since I have created singletons, all my functions are very readable! No guess work, no more\t&quot;self::function&quot; type code because you will know exactly where everything is. I even created\tstatic class constructors by using the name of the class preceded by an underscore (so &quot;users&quot;\twould have the constructor &quot;_users()&quot;). The beauty of how I developed this framework is now all my\tclasses are &quot;autoloaded&quot; as needed. That means if I request &quot;\\Database::select_all()&quot; - it will\trequire_once the database class (if it's not defined) and call the constructor if it exists. Each\ttime that database class is called after that, it just works and isn't constructed again. Just\tlike old times.\tOf course with this framework I wanted to incorporate some fancy fun stuff I learned throughout\tthe year such as the ability to sink the framework, a base configuration file, htaccess mods for\tsimpler css calls, and including an API class which makes it a freaking breeze to handle calling\tfunctions that belong to a particular group (mainly used for Ajax calls, but can send different\treturn types based on the header). That's just a given...But does this mean I am wearing the complicated gloves?\tYes, why yes it does. But if I didn't take the route of wearing the complicated gloves for a bit,\tI would not be able to debug and learn so much about structure and the way things work like I do\tnow. I am by no means an expert - and I have quite a long way to becoming one, but if I simply\tjust used what &quot;works&quot; - I, personally, would not have learned as much as I have now. I can easily\tadapt to another framework and be able to fix problems rather than relying on a manual to help me\tdo so.\tI ripped apart an engine piece by piece to figure out how it works rather than just be the driver.\tI love programming and my main goal will always be simplicity - even if that means I have to take\ta few extra steps to get there. If the end result does not make your life easier, then you are\tdoing it wrong. I have looked back into the beginning of where I started and where I am now and I\thave definitely learned a few things...."},{"import":"/src/blog/code/2012-01-07-project-flexMVC.svelte","url":"/code/2012-01-07-project-flexMVC","bg":"/images/bg_3.jpg","category":"code","title":"Project FlexMVC","slug":"2012-01-07-project-flexMVC","date":"2012-01-07","month":0,"day":6,"year":2012,"preview":"\tWell so far the test framework I have been developing is going well. It's definitely a change in\thow I am used to doing things (way more things are now static),...","strippedContent":"\tWell so far the test framework I have been developing is going well. It's definitely a change in\thow I am used to doing things (way more things are now static), but I have to admit it's coming\talong really well! The project codename is FlexMVC and my goal is to create a framework that is\tflexible for the application used.\tThe problem with my previous framework is that I was building so much onto it that the names and\tvariables were becoming messy.Old:New:\tAlso, the framework wasn't as flexible as what it could be. I would have to define variables such\tas Models, Controllers, API, Plugin, etc. just to reference the different classes and be somewhat\torganized. What if I wanted to add something like helpers? I would then have to create a new\tvariable and class that would tell the framework where the files are and what do with them. The\tlimitation didn't stop there though, my original goal as well as developing a web framework was to\tmake it portable - so if I liked the structure of my MVC, I could take it with me to other\tprojects as well. Consider the framework like a mobile home, only in this case it wasn't that\tmobile.\tSo with that in mind I wanted to shift gears into something completely new. Just like the project\tname says, flexibility is exactly what I am aiming for here. Regardless of how big or small the\tproject is, the framework will adapt to my needs. What's even more beautiful about it is that now\tthe core file is exactly 1 file! Yes, one file. I do not have all these core classes such as\t&quot;helpers&quot;, &quot;api&quot;, &quot;models&quot;, &quot;database&quot; - etc. With the new framework, I call those libraries that\tcan be accessed within your application. These do not have to be included with the framework\twhatsoever.\tAllow me to show you an example where this is really handy. Lets say we are working with WordPress\tand we want a way to add in my special API functionality with the ability to sanatize form input.\tWasn't that simple? Just include the engine, define your application folder (which holds the\tlibraries used for the projects, or views if it's a web app), call the functions you want to use,\tand bam! It's really easy and can be completely flexible to the project you are developing.\tWhat's also great about this framework is how it autoloads the classes. Lets say you want to use a\tnew class you made up called &quot;pizza&quot; - well this is the code:\tThis will go inside of the application folder, find the &quot;pizza&quot; folder, and then look for a class\tcalled &quot;Pepperoni&quot; and call the function &quot;test&quot;. The beauty of this method is you can define your\town classes and nest them as far as you want! Yes, you could have\t&quot;\\Pizza\\Pepperoni\\Michael\\Deliver::now()&quot; and that would work (as long as you have the directory\tstructure and namespace correct).\tAnother question that you might ask yourself is what about constructors? Since PHP does not have\tstatic constructors, I basically made my own way to deal with it. My idea is simple, when you auto\tload the class - check to see if there is a function that exists with the class name with an\tunderscore before the class name (ex: &quot;mike&quot; would be &quot;_mike()&quot;) and call that function. Works\tquite well. I like the static way of doing things because it helps me find where everything is,\tplus NetBeans is a bit less confused and will actually show me the class and recognize it.Why do I bother with all of this? Because it's fun ;)..."},{"import":"/src/blog/code/2012-01-06-introducing-the-next-level-of-MVC.svelte","url":"/code/2012-01-06-introducing-the-next-level-of-MVC","bg":"/images/bg_9.jpg","category":"code","title":"Introducing The Next Level Of MVC","slug":"2012-01-06-introducing-the-next-level-of-MVC","date":"2012-01-06","month":0,"day":5,"year":2012,"preview":"\tI am in development of a completely new framework yet again. This time around it's extremely\tflexible and also packs something brand new. Allow me to explain in simple terms why...","strippedContent":"\tI am in development of a completely new framework yet again. This time around it's extremely\tflexible and also packs something brand new. Allow me to explain in simple terms why I felt the\tneed to create something new.Here was the problem:Here's what I want to see:\tYou see how much cleaner the second one is? Also by using this technique, the idea will be to\tnever have a list of static variables ever again telling me the API, Models, Controllers, Etc.\tAlready I am seeing great benefits. For one, I can completely construct a project to my liking\tnow. My entire website directory is fully customizable, but better yet - I don't have to use the\tframework as a website mvc anymore. I can simply bring it with me to any project. One simple\tinclude to the framework and I can say:\tIt's that simple. As usual the framework is sinkable, contains multiple controllers, mulitple\tviews, API, Models, and everything else I could ever want. I feel like this one might be the real\twinner here ;)..."},{"import":"/src/blog/code/2011-12-14-cheers-blogger-hello-wordpress.svelte","url":"/code/2011-12-14-cheers-blogger-hello-wordpress","bg":"/images/bg_6.jpg","category":"code","title":"Cheers Blogger Hello Wordpress","slug":"2011-12-14-cheers-blogger-hello-wordpress","date":"2011-12-14","month":11,"day":13,"year":2011,"preview":"\tI used to have a blog with Blogger; however as the more I involve myself in code, Skyrim, and Pie\tFive Pizza, I have realized that I needed a one-stop solution...","strippedContent":"\tI used to have a blog with Blogger; however as the more I involve myself in code, Skyrim, and Pie\tFive Pizza, I have realized that I needed a one-stop solution for my site, Blog, and everything\telse of the like. A few of my company's clients have also been requesting WordPress sites and I\thave had to become more familiar with the framework.\tSo what it all comes down to is that I like it! Although I do not prefer WordPress for creating\twebsites, I do highly encourage this for blogging and for people who simply want ease of updating\tlots of content. I must say as a developer this allows my brain to take a break once in a while\tand crank some ideas via text.\tWelcome to the new site! I have converted all my old Blogger posts into the site and have migrated\tmy projects from my old site, along with a few random pages in between. I should have done this a\twhile ago, but it's all a learning phase into making things more efficient - and by that you can\tnever stop learning...."},{"import":"/src/blog/code/2011-11-30-multiple-controllers-multiple-views.svelte","url":"/code/2011-11-30-multiple-controllers-multiple-views","bg":"/images/bg_10.jpg","category":"code","title":"Multiple Controllers Multiple Views","slug":"2011-11-30-multiple-controllers-multiple-views","date":"2011-11-30","month":10,"day":29,"year":2011,"preview":"\tSo it took exactly one year of writing and developing a framework to finally achieve one of my\tmost desired goals: Controllers in your controllers, and Views in your Views -...","strippedContent":"\tSo it took exactly one year of writing and developing a framework to finally achieve one of my\tmost desired goals: Controllers in your controllers, and Views in your Views - you know so you can\tput that view in your view and your... Yes you get the point, or perhaps you don't. Allow me to\texplain.\tWith typical MVC structure you run into the format of &quot;controller/view&quot;, so your URL's come out\tto: &quot;mikemunsie.com/categories/games&quot;\tWell if you wanted to have a specific page to the game &quot;Alien Invasion&quot;? Maybe you can just route\t&quot;/categories/games/alien_invasion&quot; to a view and a controller, but why? Why not make it automatic\tjust like the MVC fashion already! I want this:&quot;mikemunsie.com/categories/games/alien_invasion/&quot;\tHere is how I did it. Remember that applications folder I talked about? No more. I took that out\tand simply just have controllers and views. My logic goes as following:\t&quot;If there is a folder for the controller or view, open that folder and search for the next\tparamater. If there is no next parameter, default to index.&quot;Tests:&quot;&quot; = Goes to &quot;index.php&quot;&quot;test&quot; = Goes to &quot;test.php&quot; or &quot;test/index.php&quot; if the test folder exists.&quot;test/fruit&quot; = Goes to &quot;test/fruit&quot; or &quot;test/fruit/index.php&quot; if the fruit folder exists.\t&quot;test/fruit/grapes&quot;= Goes to &quot;test/fruit/grapes&quot; or &quot;test/fruit/grapes/index.php&quot; if the grapes\tfolder exists.\t&quot;test/fruit/grapes/tasty&quot; = Goes to &quot;test/fruit/grapes/tasty.php&quot; or\t&quot;test/fruit/grapes/tasty/index.php&quot; if the tasty folder exists.\tThat's pretty cool, it takes a bit to get used to especially since this is a radical change, but\tit's pretty simple and makes for the most ultra clean URL's, let alone the app can be as big as\tyou want and you still have excellent organization.MVC^2. Cheers...."},{"import":"/src/blog/code/2011-11-04-the-battle-of-the-single-page-app.svelte","url":"/code/2011-11-04-the-battle-of-the-single-page-app","bg":"/images/bg_8.jpg","category":"code","title":"The Battle Of The Single Page App","slug":"2011-11-04-the-battle-of-the-single-page-app","date":"2011-11-04","month":10,"day":3,"year":2011,"preview":"\tToday something just clicked. My post before I was on my way to something, but it wasn't a clear\tpath. I spent many hours and many times revisiting my code to...","strippedContent":"\tToday something just clicked. My post before I was on my way to something, but it wasn't a clear\tpath. I spent many hours and many times revisiting my code to make my life just a bit easier.\tWell, as it turned out the idea of having models in my JavaScript that simply were an ajax call to\ta controller and then returned the results was a bad idea lol. This basically made the task of\tsending and retrieving data from the server slightly repetitive (okay more than repetitive lol)\tand painful.\tSo after many hours I decided &quot;Hey, why don't I just create a shortcut function that basically\tsends an ajax request with the datatype: JSON&quot; - well hey, there's a shortcut. Instead of creating\ta model with a function &quot;select_all_from_users&quot; - why don't I just say:\tI thought I was really cool by using the art of common sense on this one. There was really no\tpurpose for me to create Models the way I was doing that because it was pointless. After creating\tthis function I then thought to myself &quot;If I am a regular user, I should not be able to see a\tuser's password; however, if I am an Admin, I should&quot;... so what do I do in this situation?Sure I could use the strategy of utilizing my Ajax based controllers and saying:\tBut then I would have to do this for so many functions. It would be painful to basically see what\tI can do with the users account vs. the admin account. So I went back to thinking more. I didn't\tlike this old school method I was using, there had to be a better way. After many hours of\tresearch and thinking and programming all at the same time (plus Pandora), I thought of having a\tspecial controller dedicated to the User, Admin, and whatever else groups I thought would be using\tthis program.\tNow with this setup I could easily see what functions the User and Admin can do. I decided to\tcreate a new section in my framework called &quot;API&quot;. The API section was basically setup similar how\tI setup my models.\tBut of course I ran into an immediate problem. I am used to Class-&gt;function() architecture -\tnow I will be doing Class-&gt;Class-&gt;function(). So it took me a while to brew this, but sure\tenough I did (wrong or right, the API controllers are constructed only once thanks to my static\telectricity). Now the following is possible:\tThanks to the new setup, I can have the User API class have a base class with a constructor that\tcan check for permission levels (You can't access the user API without proper permissions. Same\tapplies for the Admin). I also made sure it was simple to call with the framework:http://website.com?api=user/users/select_all\tI figure with the special keyword &quot;api&quot; I could go ahead and latch onto the API side of the\tframework. Plus all the functions that are inside of the API class have a special return:\tIn the base API class I figure out if the call is Ajax based or not. If it's not Ajax based, I\tbasically just return an array with &quot;success&quot; and &quot;results&quot;. If it's an Ajax call, I simply return\ta JSON encoded array to the user with of course the appropriate headers.Now lastly, I changed my php function to two routines:\tThis completely changed two things: The need for JS Models (which I removed, thankfully until I\thave better use for it), and Ajax Controllers (which I also removed since there is no point). My\tmind is just a bit more clear now and man is it fun to write stuff now! :DMy framework is now:Cheers...."},{"import":"/src/blog/code/2011-11-01-battling-the-single-page-application.svelte","url":"/code/2011-11-01-battling-the-single-page-application","bg":"/images/bg_7.jpg","category":"code","title":"Battling The Single Page Application","slug":"2011-11-01-battling-the-single-page-application","date":"2011-11-01","month":9,"day":31,"year":2011,"preview":"\tI have been striving to create some structure in the world of developing single page applications\tusing JQuery, PHP, and MySQL. What I have come to the realization is seeing this...","strippedContent":"\tI have been striving to create some structure in the world of developing single page applications\tusing JQuery, PHP, and MySQL. What I have come to the realization is seeing this in my editor:\tI'm not sure how I feel about this haha, but for my structure it makes sense. Lets dive into the\tcraziness.\t1. &quot;templates/documents.js&quot; is the BackboneJS View for my documents JQuery template. This supports\tthe logic that goes into the template.\t2. &quot;models/documents.js&quot; is the BackboneJS Model used for documents (which basically for me is a\tcollection of functions that call to the controller and recieve data - for now just a bunch of\tajax routines with callbacks).\t3. &quot;ajax_controllers/documents.php&quot; is the PHP MVC controller that is used to handle Ajax Based\tevents for the documents.\t4. &quot;templates/documents.php&quot; is a collection of templates and elements used for the documents\tview. I structure them like this:\tYou see, I have three different templates, but you can tell which view it belongs to by using the\t&quot;view&quot; attribute I made up. The class simple tells me what the template is used for.\t5. &quot;models/documents.php&quot; is my PHP MVC model used for Documents. It of course contains all the\tqueries and magic.\tNow let alone I could make this even worse by saying I have a PHP MVC view called &quot;documents&quot; that\tbelongs in &quot;views/documents.php&quot; - but it's already bad enough lol.\tI thought logically this would be easier to see the structure of everything and easily adjust or\tchange things knowing exactly where everything is; however, i'm slightly debating on two things:\t1. Change my programming editor, or 2. change the names of the files to something readable so I\tknow which is which.Ex:\tIt's a debate, I am going to explore both of my options. I am not bound by a set of rules that I\thave to use, but I would like it to make sense though - at least to me. Time to explore!..."},{"import":"/src/blog/code/2011-09-26-the-devilish-ie8ie7-fadeout-of-blackness.svelte","url":"/code/2011-09-26-the-devilish-ie8ie7-fadeout-of-blackness","bg":"/images/bg_4.jpg","category":"code","title":"The Devilish Ie8ie7 Fadeout Of Blackness","slug":"2011-09-26-the-devilish-ie8ie7-fadeout-of-blackness","date":"2011-09-26","month":8,"day":25,"year":2011,"preview":"\tSo i've been having this issue for quite some time dealing with how to properly fade in and out\telements on IE7/IE8. The issue has been that anything I fadeout it...","strippedContent":"\tSo i've been having this issue for quite some time dealing with how to properly fade in and out\telements on IE7/IE8. The issue has been that anything I fadeout it basically has this nasty black\tborder that comes along with it. I use the JQuery library and I have seen many people complain\tabout this issue in numerous amounts of forums. The biggest issue was that sure some of the\tsolutions worked, but there wasn't really a clear understanding why.\tWell recently I stumbled across how much the filter attribute can change your life for older\tversions of IE. So, instead of using:Use this:\tIt's the magical filter: filter: progid:DXImageTransform.Microsoft.AlphaImageLoader that will do\tthe trick. That's all you need, cheers and seabiscuits...."},{"import":"/src/blog/code/2011-08-30-simply-simple-css.svelte","url":"/code/2011-08-30-simply-simple-css","bg":"/images/bg_1.jpg","category":"code","title":"Simply Simple Css","slug":"2011-08-30-simply-simple-css","date":"2011-08-30","month":7,"day":29,"year":2011,"preview":"\tFirst and foremost I like to disagree with certain standards, or more-so the fact of being\tcomfortable with doing things in a complicated fashion. I enjoy simplicity and I also firmly\tbelieve...","strippedContent":"\tFirst and foremost I like to disagree with certain standards, or more-so the fact of being\tcomfortable with doing things in a complicated fashion. I enjoy simplicity and I also firmly\tbelieve that there is alwaysan easier way of doing things. Granted most of the time to enjoy the\tsimple things in life you have to do something complicated, but it sure is worth it :)Lets get right to it.\tThe problem that maybe you or someone you know is probably the frustration involved with CSS and\trelative or absolute URLS. If you are like me, you enjoy relative positioning because it allows\tyou to have multiple sites in one directory, but then you have things like &quot;../../../../&quot; and that\tdoesn't look too clean. Plus, having to remember where you are constantly just doesn't seem like\tthe best idea.\tPerhaps you are the type of programmer that simply says absolute urls are the way to go -\t&quot;/app/img/folder/&quot; is the best route because it allows you to specifically say this file goes here\tand here is the direct path... well what happens if you want to have a server that has multiple\tsites? Do you create a subdomain each time? Do you work on your production server just to make a\tchange? What about locally - isn't it frustrating to work with a company that has multiple sites\tand you have to clear your htdocs folder each and every single time?\tI did not like this at all and this is why I developed this concept of the &quot;_public&quot; and &quot;vendors&quot;\tshortcuts. Here is what I mean:EX 1) Not using the &quot;_public&quot; shortcut.EX 2) Using the new &quot;_public&quot; shortcut.\tThe new technique eliminates having to say &quot;/public&quot; or &quot;../&quot; public because it knows where the\tpublic folder is in your .htaccess file. This shortcut also works for images and everything else\tbecause it simply says any instance of &quot;_public&quot; will be replaced with the actual location of the\tpublic folder according your .htaccess.Now my web server can look like this:BeforeNow\tNo more creating sub-domains or any other hacks to have multiple sites. Simply work locally and\tpush online to wherever you need. Plus by combining this with the BASE tag, you get completely\tportable sites. It makes my life easier and i'm sure by utilizing this technique you can to. It's\tthe secret sauce to many things I do, but also what makes the framework I have developed so\tunique. It's not standard and probably won't ever be, but sometimes it's nice to see that there is\tactually easier ways to handle things.Here's the code:\tI am not an expert at writing .htaccess files, but I can safely this works and I have tested it\tmany times. Cheers!..."},{"import":"/src/blog/code/2011-08-09-using-the-html-base-tag-for-portable-sites.svelte","url":"/code/2011-08-09-using-the-html-base-tag-for-portable-sites","bg":"/images/bg_5.jpg","category":"code","title":"Using The Html Base Tag For Portable Sites","slug":"2011-08-09-using-the-html-base-tag-for-portable-sites","date":"2011-08-09","month":7,"day":8,"year":2011,"preview":"\tOver the course of the past 8 months, I have been fiddling around with writing my own Framework.\tWhy do you ask? It's because sometimes the best way to learn is...","strippedContent":"\tOver the course of the past 8 months, I have been fiddling around with writing my own Framework.\tWhy do you ask? It's because sometimes the best way to learn is tear something apart and find out\thow it works from the inside-out. What I came across a few months ago was my strange urge to have\tmultiple applications in one MVC framework.I wanted:http://mikemunsie.com/app/controller/viewThe problem was this:http://mikemunsie.com/controller/view\tHow could I figure out the app if I wanted to keep the integrity of MVC? Well this was my\tsolution: I simply made the first parameter an application check. If the application name existed,\tthen we would point to that application. So &quot;http://mikemunsie.com/mobile&quot; would go directly to\tthe mobile application. This made the URL very clean and memorable.\tNow, the next issue I had was how would I keep all the links relative to the application. That's\twhere the BASE tag had come into play. Since I could specify the base tag as\t&quot;http://mikemunsie.com/app&quot; - I could then reference all the links to be relative to this path.\tThis helped everything allowing me to create mulitple applications in one framework.\tOf course there is even more issues. What about images? If I am working relative and have multiple\tinstances of my framework on my server, how can I reference each of the public folders by root\trelative? I couldn't say &quot;/app/app/images&quot; because I had mutliple websites in one folder; rather I\twanted root relative paths. So that's why I learned more about the .htaccess and a simulative root\trelative path (sounds cool) by saying &quot;_app/&quot; -&gt; this allows me to access the current\tapplications public folder. I also created &quot;_app/appname/_public&quot; to reference another\tapplications public folder.\tAll this was to help me manage multiple websites and create them as quickly as possible. This\tframework is extremely small and very manageable... at least for me lol. I know it's not perfect,\tand I know I am probably the only one who uses it, but it's absolutely great for what I wanted to\tdo!No more clearing the htdocs each time for a new site :)http://projects.mikemunsie.com/munsieMVC..."},{"import":"/src/blog/code/2011-07-22-unmaintainable-code.svelte","url":"/code/2011-07-22-unmaintainable-code","bg":"/images/bg_2.jpg","category":"code","title":"Unmaintainable Code","slug":"2011-07-22-unmaintainable-code","date":"2011-07-22","month":6,"day":21,"year":2011,"preview":"\tI am posting this because for one - it's absofreakinglutely hilarious, and two - we have all been\taround this! We know there are still those pesky developers who simply rename...","strippedContent":"\tI am posting this because for one - it's absofreakinglutely hilarious, and two - we have all been\taround this! We know there are still those pesky developers who simply rename all their variables\tto some obscure name, remove all comments, and then do unnecessary duplication just to make it\tseem like they are doing more than what they really are. Can we say job security? Perhaps in a\tjoking sense, but still to this day I see so many people not commenting anything! How can you\treturn to code months later if you can't even remember what you did?!Oh it frustrates me, but it makes for the most hilarious post of all time! Enjoy :)\thttp://www.strauss.za.com/sla/code_std.asp..."},{"import":"/src/blog/code/2011-07-20-the-framework-matures.svelte","url":"/code/2011-07-20-the-framework-matures","bg":"/images/bg_11.jpg","category":"code","title":"The Framework Matures","slug":"2011-07-20-the-framework-matures","date":"2011-07-20","month":6,"day":19,"year":2011,"preview":"\tBeing a developer requires one very important thing: staying current with technology. I don't even\tknow how many versions of my framework I have created over the course of the last...","strippedContent":"\tBeing a developer requires one very important thing: staying current with technology. I don't even\tknow how many versions of my framework I have created over the course of the last seven months.\tSome people believe that I should follow standards and go with a more common framework such as\tCodeIgniter or CakePHP. Although those frameworks are excellent at what they do, unfortunately\tthey do not benefit me in my current situation.\tI wrote my own framework for only about five reasons: One, at the time the first framework I ever\tused was way too big and I learned that I only utilized maybe half or less than half of the\tfolders there. Two, I wanted a framework that worked in sub directories (at the time I did not\tknow about CodeIgniter - which really is a great framework I will recommend anyone but myself).\tThree, I needed structure because at the time I was used to referencing libraries, models,\tcontrollers, and whatever else as &quot;$this-&gt;class&quot; what is this? Is this a controller, a view, a\tmodel? I didn't know and it was majorly confusing. Four, I thought having to say\t&quot;/app/appname/app/img/test.jpg&quot; was way too long. I don't like absolute paths because that meant\teach time I wanted a new site in my directory, I would have to say &quot;/sitename/app/appname...&quot; and\tthat was not fun having to change all those paths once I deployed to server.\tLastly, I wanted to learn. Writing an MVC framework over the last 7 months has really made me\tunderstand the importance in structure. The goal should always be simplicity. Everything I do I\ttry to make easy for me to understand now and later. I think I finally have finished what I\toriginally wanted to do with MVC and so far it's been great for all the projects I have been\tworking on. Sure it's been a battle and i've had some scary moments (as everyone does when\tlearning something), but it's a battle I am willing to learn from and continue. It's my engine and\tfor what it's worth - it's not so bad, it's actually everything i've wanted it to be.\tI'm sure i'm always going to be updating as I continue to learn (will move to namespaces once the\tserver's I work with support php 5.3), but hopefully for a little while I can focus on writing\tmore libraries and helpers to get some projects moving faster. The one thing I want to focus on\tfor the next few months is basically web applications. My toolbox is all ready to go and boy\tJQuery UI is just begging for me to take it for a walk.\tThat's all for now, I develop like a mad man these days and i'm sure many people will never\tunderstand my brain. I just simply enjoy writing code...."},{"import":"/src/blog/code/2011-07-07-just-a-post-for-me-to-remember-later.svelte","url":"/code/2011-07-07-just-a-post-for-me-to-remember-later","bg":"/images/bg_3.jpg","category":"code","title":"Just A Post For Me To Remember Later","slug":"2011-07-07-just-a-post-for-me-to-remember-later","date":"2011-07-07","month":6,"day":6,"year":2011,"preview":"\tIE style sheets. I do a lot of front end web development nowadays. A few years back I would have\tsaid how much I think IE rocks... but times change and...","strippedContent":"\tIE style sheets. I do a lot of front end web development nowadays. A few years back I would have\tsaid how much I think IE rocks... but times change and as the more I learn the more I realize its\tlimitations. Now IE9 is pretty good and hopefully IE10 will be even better; however, still many\tpeople use IE7 and IE8 which is hard to get people to upgrade.\tI guess if it's not broken don't fix it... more like since you won't fix it - we will for you.\thttp://css-tricks.com/132-how-to-create-an-ie-only-stylesheet/..."},{"import":"/src/blog/code/2011-02-02-using-jquery-to-select-an-option.svelte","url":"/code/2011-02-02-using-jquery-to-select-an-option","bg":"/images/bg_9.jpg","category":"code","title":"Using Jquery To Select An Option","slug":"2011-02-02-using-jquery-to-select-an-option","date":"2011-02-02","month":1,"day":1,"year":2011,"preview":"\tFor very long I have used a routine in which involves a for-loop and going through every element's\tvalue and then selecting the option that matches the value specified. How about...","strippedContent":"\tFor very long I have used a routine in which involves a for-loop and going through every element's\tvalue and then selecting the option that matches the value specified. How about we scratch that.\tHow about we make all of this one line of code?Enjoy! :D..."},{"import":"/src/blog/code/2011-01-07-jamtube-jquery-and-css3-youtube-music-player.svelte","url":"/code/2011-01-07-jamtube-jquery-and-css3-youtube-music-player","bg":"/images/bg_6.jpg","category":"code","title":"Jamtube Jquery And Css3 Youtube Music Player","slug":"2011-01-07-jamtube-jquery-and-css3-youtube-music-player","date":"2011-01-07","month":0,"day":6,"year":2011,"preview":"\tJamTube is now ready and rockin'! The idea is simple: I wanted to create a way to generate a\tyoutube playlist while I browsed or surfed the web. Since I was...","strippedContent":"\tJamTube is now ready and rockin'! The idea is simple: I wanted to create a way to generate a\tyoutube playlist while I browsed or surfed the web. Since I was using Linux based computer with no\tITunes, I would always go from one video to another on YouTube just listening to tracks. Now,\talthough I could have created a music playlist on YouTube itself, I was too lazy... but then I\tcame across the wild idea of why not share this playlist on my site?\tOne thing lead to another and soon I was on my way to creating little animations and playlists\tthat could be shared via facebook. It's a fun idea, and you can actually see it working right now\ton this blog. Just another fun coding project :)..."},{"import":"/src/blog/code/2009-05-11-zip-code-calculations.svelte","url":"/code/2009-05-11-zip-code-calculations","bg":"/images/bg_10.jpg","category":"code","title":"Zip Code Calculations","slug":"2009-05-11-zip-code-calculations","date":"2009-05-11","month":4,"day":10,"year":2009,"preview":"In today's programming session, I wanted to develop a technique in which you could calculate the distance between 2 zip codes using Longitude and Latitude. Here's the basic formula that...","strippedContent":"In today's programming session, I wanted to develop a technique in which you could calculate the distance between 2 zip codes using Longitude and Latitude. Here's the basic formula that I researched:This basically converts the distance between the two zip codes in miles. Since I was able to use this formula and get accurate results, I wanted to take the first step in developing a routine that will find all the cities within so many miles of your zip.My idea (in english was this):Select all the information from zipcodes where (distance between these two zip codes) is less than&lt; insert miles here &gt;Then my brain giggled in excitement and everything just clicked. I came up with:My cities Longitude and Latitude = 97.401123, 32.466252This allowed me to view all the zip codes within 50 miles of mine :):D * 9000!..."}];
          export const projectArticles = [{"import":"/src/blog/projects/2015-09-13-minecraft-server-status.svelte","url":"/projects/2015-09-13-minecraft-server-status","bg":"/images/bg_7.jpg","category":"projects","title":"Minecraft Server Status","slug":"2015-09-13-minecraft-server-status","date":"2015-09-13","month":8,"day":12,"year":2015,"preview":"\thttps://github.com/mikemunsie/minecraft-status\tIn the last week, I purchased myself a Raspberry Pi to start hacking around with. I thought it\twould be fun to try something new and get into the IoT. For...","strippedContent":"\thttps://github.com/mikemunsie/minecraft-status\tIn the last week, I purchased myself a Raspberry Pi to start hacking around with. I thought it\twould be fun to try something new and get into the IoT. For my first project, I wanted to build an\tindicator to let me know when my friends were playing Minecraft.\tSo the first thing I did was try to read the server logs and get information when someone logs in\tor out. By doing this I learned I could not just find out when people are online, but also when\tsomeone dies, gets an achievement, sends a message, and so much more. This was pretty cool, but\tfinding out when people were online or not was not actually very efficient. Turns out there's a\tway more effective way using and I found a great NPM module, https://www.npmjs.com/package/gamedig, that lets me query the status of any game server. That's pretty sweet.\tThe next thing I did was expose an API that I could hit from my Raspberry Pi. So I quickly made a\tsmall Node project using Express, and then queried the logs and status every 5 seconds. Once that\twas up and running, I then set up my Raspberry Pi to hit that API every few seconds to see what\tthe latest status was. This worked out great in the beginning, and I was able to detect when\tpeople were online and trigger my hue lights to change. It was a little slow at first at detecting\tchanges, but hey every 5 seconds is not too bad.Here's what that version looked like:\tAfter proving my concept worked, I then went crazy and decided to reduce the lag. I created a\twebsocket, and then queried the server and the logs every half a second to make sure I get the\tlatest information. Any new events would then broadcast to anyone listening on the socket and get\timmediate updates. This worked out great and the first video on this page shows just how quickly\tit updates.\tLast but not least, you can't forget the aesthetics. I headed down to Toys R Us and picked up a\tMinecraft Wearable Creeper Head. It was the perfect design because the lights were all cut out and\tit fitted my lamp perfectly. I actually got really lucky because I had no idea if it would work\tout or not! This was all a lot of fun and I plan on making many more projects with the Pi...."},{"import":"/src/blog/projects/2015-04-07-cars-and-coffee.svelte","url":"/projects/2015-04-07-cars-and-coffee","bg":"/images/bg_3.jpg","category":"projects","title":"Cars And Coffee","slug":"2015-04-07-cars-and-coffee","date":"2015-04-07","month":3,"day":6,"year":2015,"preview":"\tLately I've been wanting to get more into photography. You may have noticed the background images\tin this site randomly change with each article... well those images aren't stock photography,\tthere are...","strippedContent":"\tLately I've been wanting to get more into photography. You may have noticed the background images\tin this site randomly change with each article... well those images aren't stock photography,\tthere are images I or my talented wife, Jeni Munsie, have taken! It's been a whole lotta fun :)Here's a few images from the recent Cars and Coffee event we attended:..."},{"import":"/src/blog/projects/2015-01-01-budgeteer.svelte","url":"/projects/2015-01-01-budgeteer","bg":"/images/bg_5.jpg","category":"projects","title":"Budgeteer","slug":"2015-01-01-budgeteer","date":"2015-01-01","month":11,"day":31,"year":2014,"preview":"\tI've been wanting to play around with material design for a while now, and I finally got the\tchance in the last few days thanks to a nice once-in-a-year cold. I...","strippedContent":"\tI've been wanting to play around with material design for a while now, and I finally got the\tchance in the last few days thanks to a nice once-in-a-year cold. I really liked the idea of &quot;lets\tanimate all the things&quot;. I downloaded the angular-material framework\t(https://github.com/angular/material) and then had some fun.\tThe idea of the application simple: manage your monthly budget. You input your salaries, add in\tyour bills, and it will tell you how much you will save and how much of your salary goes towards\tbills. Simple as that.\tWhat's cool about this web mobile app is all the animations. I'd say about 80% of the time that\twent into this was creating custom animations, improving upon the material framework (such as icon\tcolors), picking a good simple stack for future projects (decided to keep it NodeJS with a custom\tgulp build), and lastly some color config thanks to the good ol' dribbble.Here's a few screens:\t..."},{"import":"/src/blog/projects/2014-11-25-introverts-guide-to-the-galaxy.svelte","url":"/projects/2014-11-25-introverts-guide-to-the-galaxy","bg":"/images/bg_2.jpg","category":"projects","title":"Introverts Guide To The Galaxy","slug":"2014-11-25-introverts-guide-to-the-galaxy","date":"2014-11-25","month":10,"day":24,"year":2014,"preview":"\tIt's about time! I've always enjoyed writing and I finally got the courage to write my first\tbook/blog (blook as my dad calls it). It's a humorous little read about daily...","strippedContent":"\tIt's about time! I've always enjoyed writing and I finally got the courage to write my first\tbook/blog (blook as my dad calls it). It's a humorous little read about daily experiences in the\tlife of an introvert.\tI've realized that I have a few quirks, and apparently I'm not the only one! These experiences are\tyour everyday normal experiences, but magnified through the eyes of an introverted person. I had a\tlot of fun writing this book and I haven't finished yet. I plan on continuing to add content as\tthe months progress and hopefully get a few people to help add in their stories.\tYou can check it out @ https://www.gitbook.com/book/mikemunsie/introverts-guide-to-the-galaxy\t..."},{"import":"/src/blog/projects/2014-11-01-soundcloud.svelte","url":"/projects/2014-11-01-soundcloud","bg":"/images/bg_10.jpg","category":"projects","title":"Soundcloud","slug":"2014-11-01-soundcloud","date":"2014-11-01","month":9,"day":31,"year":2014,"preview":"\tI recently setup a Soundcloud account to capture all the sounds and ideas that I've been making\tlately. I'm still learning guitar, and I have a lot to learn from song...","strippedContent":"\tI recently setup a Soundcloud account to capture all the sounds and ideas that I've been making\tlately. I'm still learning guitar, and I have a lot to learn from song structure and melody, but\tit's been a fun ride here in the past month. I plan on keeping this account up to date with any of\tmy latest creations/ideas. Should be a fun side project :)\tMy Soundcloud can be found @ https://soundcloud.com/webmastermunsie..."},{"import":"/src/blog/projects/2013-08-05-admin-tools.svelte","url":"/projects/2013-08-05-admin-tools","bg":"/images/bg_6.jpg","category":"projects","title":"Admin Tools","slug":"2013-08-05-admin-tools","date":"2013-08-05","month":7,"day":4,"year":2013,"preview":"\tSo one day my WordPress installation got hacked... okay, so maybe multiple times and my site was\tshut down forcing me to remove the installation and pretty much hit the restart...","strippedContent":"\tSo one day my WordPress installation got hacked... okay, so maybe multiple times and my site was\tshut down forcing me to remove the installation and pretty much hit the restart button. So what\tdid I learn from that lesson? To back up frequently. But also that I don't like WordPress in the\tfact that it's quite too large for what I actually use. I still recommend WP to many people, but\tfor my own personal site I felt like it just wasn't flexible enough for what I wanted to do.\tWith that I set off into creating my own CMS that was bullet-proof against hackers! Completely\tjoking, no site will ever be that bullet proof, but really though I wanted to have an easy way to\tbackup my site and possibly a more intelligent way of working on my site. I developed a set of\ttools that allows me to work on my site locally and push online. This way I always have a local\tcopy of the database and just in case the site goes down, I can just hit the synchronize button\tand restore my posts at any time.\tThe backup feature is also cool (in progress) which will create a zip with all my files and posts.\tIt's extremely geeky, probably been done before, but it was fun and it's all munsie code except\tfor the awesome WYSWYG CKEditor. Here's a couple of screens of what I what I get to use :)..."},{"import":"/src/blog/projects/2013-04-29-my-wedding-site.svelte","url":"/projects/2013-04-29-my-wedding-site","bg":"/images/bg_11.jpg","category":"projects","title":"My Wedding Site","slug":"2013-04-29-my-wedding-site","date":"2013-04-29","month":3,"day":28,"year":2013,"preview":"\tJuly 14th is the big day and I really needed a website to let everyone know :) This was my first\tattempt at making a completely 100% responsive site. I wanted...","strippedContent":"\tJuly 14th is the big day and I really needed a website to let everyone know :) This was my first\tattempt at making a completely 100% responsive site. I wanted to take what I learned about media\tqueries and see if I could make it happen. Well the result came out great and it's a nice clean\tsite that works well on just about anything.Check out our site! (Update: link no longer available, Jeni became a munsie)..."},{"import":"/src/blog/projects/2012-12-06-brightwing-home-health.svelte","url":"/projects/2012-12-06-brightwing-home-health","bg":"/images/bg_4.jpg","category":"projects","title":"Brightwing Home Health","slug":"2012-12-06-brightwing-home-health","date":"2012-12-06","month":11,"day":5,"year":2012,"preview":"\tHelped design the look and feel for the Home Health company, BrightWing. This was the first time\tbranching into a small fun project in quite some time. Got to use some...","strippedContent":"\tHelped design the look and feel for the Home Health company, BrightWing. This was the first time\tbranching into a small fun project in quite some time. Got to use some of the new front end skills\tI've learned as well as layout and color scheme. All prototypes were created in Keynote and\tdeveloped in JSP.\tHave a peek @ http://brightwinghomehealth.com..."},{"import":"/src/blog/projects/2012-11-14-my-ADT.svelte","url":"/projects/2012-11-14-my-ADT","bg":"/images/bg_1.jpg","category":"projects","title":"My ADT","slug":"2012-11-14-my-ADT","date":"2012-11-14","month":10,"day":13,"year":2012,"preview":"\tJust in case you were wondering, I've been working with ADT in the past 7 months on their new\tcustomer portal @ http://myadt.com. So far it's\tbeen a pretty neat project! I've...","strippedContent":"\tJust in case you were wondering, I've been working with ADT in the past 7 months on their new\tcustomer portal @ http://myadt.com. So far it's\tbeen a pretty neat project! I've developed the mobile version of the site (we went responsive),\tcreated the new home page slideshow, and have helped create many of the internal pages on the\tsite. I've also helped create Wireframes and had the privilege to work along side many talented\tdevelopers to catch up with some good UX design.Long story short: I've learned quite a lot.\tSince being on this project I've fallen in love with KnockoutJS, introduced to Wire-framing with\tKeynote, and of course learning much more about the truly amazing SASS. Also before this project I\twould use frameworks for creating responsive design such as Twitter's Bootstrap\tor Zurb's awesome Foundation. Now I just use a classy\tmixin called\trespond-to&quot; in which you just a pass a device you want to write queries to and it will go ahead and add those\tin for you...."},{"import":"/src/blog/projects/2012-01-17-anchor.svelte","url":"/projects/2012-01-17-anchor","bg":"/images/bg_8.jpg","category":"projects","title":"Anchor","slug":"2012-01-17-anchor","date":"2012-01-17","month":0,"day":16,"year":2012,"preview":"\tWhat's so cool about this website is unlike many other blog-based agency websites, we went ahead\tand created a truly creative website representative of our company and what we are capable...","strippedContent":"\tWhat's so cool about this website is unlike many other blog-based agency websites, we went ahead\tand created a truly creative website representative of our company and what we are capable of\tproducing. What may appear as a simple cartoony design lyeÂ’s a much more complicated intricate\tdesign. Buzzword time: this site incorporates the single page application architecture (try\tnavigating the site and you will see hashtag referencing mania) thanks to BackBoneJS, a custom\tframework built to uniquely separate the views, templates, and code that corresponds with each\tone, and alas Â–an API built to handle custom Ajax calls. Of course needless to say there is some\tcool animation to go with it, but for the fun of it Â– view source some time ;)http://www.anchormd.com/..."}];
        