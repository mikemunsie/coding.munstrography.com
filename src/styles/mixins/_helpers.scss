@mixin helpers-opacity($value) {
	$IEValue: $value * 100;
	opacity: $value;
}

@mixin helpers-getFont($name, $src) {
	@font-face {
		font-family: #{$name};
		src: url($src);
		src: url('#{$src}.eot?#iefix') format('embedded-opentype'),
			url('#{$src}.woff') format('woff'), url('#{$src}.ttf') format('truetype'),
			url('#{$src}.svg#modern_pictogramsnormal') format('svg');
		font-weight: normal;
		font-style: normal;
	}
}

@mixin helpers-inlineblock {
	display: inline-block;
	zoom: 1;
	*display: inline;
}

@mixin helpers-vertical-align {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

@mixin helpers-border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box; /* stops bg color from leaking outside the border: */
}

@mixin helpers-transparentClickable {
	background: url('/images/transparent.png');
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 100;
	cursor: hand;
	cursor: pointer;
}

@mixin helpers-container {
	max-width: $container;
	margin: auto;
	position: relative;
	padding: 0 $pad * 2;
	@include helpers-group;
	@include respond-at(false, 1100px) {
		max-width: 100%;
	}
}

@mixin helpers-group {
	&:before,
	&:after {
		content: '';
		display: table;
	}
	&:after {
		clear: both;
		*zoom: 1;
	}
}

@mixin helpers-arrow(
	$color: white,
	$borderColor: #ccc,
	$size: 7px,
	$top: -7px,
	$left: auto,
	$right: 7px,
	$bottom: auto
) {
	&:before {
		position: absolute;
		top: $top;
		left: $left;
		right: $right;
		bottom: $bottom;
		display: inline-block;
		border-right: $size solid transparent;
		border-bottom: $size solid $borderColor;
		border-left: $size solid transparent;
		border-bottom-color: $size solid $borderColor;
		content: '';
	}
	&:after {
		position: absolute;
		top: $top + 1px;
		left: $left + 1px;
		right: $right + 1px;
		bottom: $bottom;
		display: inline-block;
		border-right: $size - 1px solid transparent;
		border-bottom: $size - 1px solid $color;
		border-left: $size - 1px solid transparent;
		content: '';
	}
}

@mixin respond-at($min: false, $max: false) {
	@if $min == false {
		@media only screen and (max-width: $max) {
			@content;
		}
	} @else if $max == false {
		@media only screen and (min-width: $min) {
			@content;
		}
	} @else {
		@media only screen and (min-width: $min) and (max-width: $max) {
			@content;
		}
	}
}
